(** val str : string **)

let str =
  String ((Ascii (False, False, True, False, True, False, True, False)),
    (String ((Ascii (False, False, False, True, False, True, True, False)),
    (String ((Ascii (True, False, False, True, False, True, True, False)),
    (String ((Ascii (True, True, False, False, True, True, True, False)),
    (String ((Ascii (False, False, False, False, False, True, False, False)),
    (String ((Ascii (True, False, False, True, False, True, True, False)),
    (String ((Ascii (True, True, False, False, True, True, True, False)),
    (String ((Ascii (False, False, False, False, False, True, False, False)),
    (String ((Ascii (True, False, False, False, False, True, True, False)),
    (String ((Ascii (False, False, False, False, False, True, False, False)),
    (String ((Ascii (True, True, False, False, True, True, True, False)),
    (String ((Ascii (False, False, True, False, True, True, True, False)),
    (String ((Ascii (False, True, False, False, True, True, True, False)),
    (String ((Ascii (True, False, False, True, False, True, True, False)),
    (String ((Ascii (False, True, True, True, False, True, True, False)),
    (String ((Ascii (True, True, True, False, False, True, True, False)),
    EmptyString)))))))))))))))))))))))))))))))
str :: String
str =
  String0 (Ascii False False True False True False True False) (String0
    (Ascii False False False True False True True False) (String0 (Ascii True
    False False True False True True False) (String0 (Ascii True True False
    False True True True False) (String0 (Ascii False False False False False
    True False False) (String0 (Ascii True False False True False True True
    False) (String0 (Ascii True True False False True True True False)
    (String0 (Ascii False False False False False True False False) (String0
    (Ascii True False False False False True True False) (String0 (Ascii
    False False False False False True False False) (String0 (Ascii True True
    False False True True True False) (String0 (Ascii False False True False
    True True True False) (String0 (Ascii False True False False True True
    True False) (String0 (Ascii True False False True False True True False)
    (String0 (Ascii False True True True False True True False) (String0
    (Ascii True True True False False True True False)
    EmptyString)))))))))))))))


(** val str : char list **)

let str =
  'T'::('h'::('i'::('s'::(' '::('i'::('s'::(' '::('a'::(' '::('s'::('t'::('r'::('i'::('n'::('g'::[])))))))))))))))
(** val str : string **)

let str =
  "This is a string"
str :: Prelude.String
str =
  "This is a string"


